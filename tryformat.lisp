(defun format-game (b)
  (let* ((new-list nil))
      (loop for x in b do
            (when (equal x 0)
              (setq n '(-))
              (append new-list n)
              )
            (when (not (equal x 0))
              (append new-list x)))
      
  (return new-list)
    ))

(defun format-game2 (vec)
               (let* ((new-list nil))
                 (dotimes (i (length vec)) 
                   (when (equal x 0)
                     (setq n "-")
                     (push n new-list)
                     )
                   (when (not (equal x 0))
                     (push (nth i vec) new-list)
                     )
                   )
                 (reverse new-list)
                 ))
